"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

"Indicates what fields are available at the top level of a query operation."
type Query {
    users: [User!]! @all
    user(id: ID! @eq): User! @find
    devices: [Device!]! @all @guard
    deviceByMacaddress(macaddress: String! @eq): Device! @find
    me: User @guard
    mydevice: [Device!]! @guard
    mydevicebydate(date: String! @eq): [Device!]! @guard
}

"Account of a person who utilizes this application."
type User {
    id: ID!
    name: String!
    email: String!
    device: String!
    email_verified_at: DateTime
    created_at: DateTime!
    updated_at: DateTime!
}


type Device {
    id: ID!
    macaddress: String!
    longitude: String!
    latitude: String!
    bloodpressure: String!
    created_at: DateTime!
    updated_at: DateTime!
}


type Mutation {
    createDevice(macaddress: String!, longitude: String!, latitude: String!, bloodpressure: String!): Device! @create @guard
    deleteuser(id: ID! @eq): User! @delete
    register(input: RegisterInput!): AuthPayload @field(resolver: "App\\GraphQL\\Mutations\\RegisterMutation")
    login(email: String!, password: String!): AuthPayload!  @field(resolver: "App\\GraphQL\\Mutations\\Login")
    logout: Message! @field(resolver: "App\\GraphQL\\Mutations\\Logout") @guard
}


type AuthPayload {
    token: String!
    user: User!
    ttl: Int!
}

input RegisterInput {
    name: String!
    email: String!
    device: String!
    password: String!
}

type Message {
    message: String!
}
